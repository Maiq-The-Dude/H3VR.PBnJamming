root=true

[*.*]
max_line_length=180

[makefile]
charset=utf-8
indent_style=tab
end_of_line=lf
insert_final_newline=true

[*.xml]
charset=utf-8
indent_style=space
indent_size=2
end_of_line=lf
insert_final_newline=true

[*.{md,markdown}]
charset=utf-8
indent_style=space
indent_size=2
trim_trailing_whitespace=false
end_of_line=lf
insert_final_newline=true

[*.cs]
charset=utf-8
indent_style=tab
trim_trailing_whitespace=true
end_of_line=lf
insert_final_newline=true

# New line preferences
csharp_new_line_before_open_brace=all
csharp_new_line_before_else=true
csharp_new_line_before_catch=true
csharp_new_line_before_finally=true
csharp_new_line_before_members_in_object_initializers=true
csharp_new_line_before_members_in_anonymous_types=true
csharp_new_line_between_query_expression_clauses=true

# Indentation preferences
csharp_indent_block_contents=true
csharp_indent_braces=false
csharp_indent_case_contents=true
csharp_indent_case_contents_when_block=true
csharp_indent_switch_labels=true
csharp_indent_labels=one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order=public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field=false:suggestion
dotnet_style_qualification_for_property=false:suggestion
dotnet_style_qualification_for_method=false:suggestion
dotnet_style_qualification_for_event=false:suggestion

# use keywords instead of BCL types, and var restrictions.
csharp_style_var_for_built_in_types=true:suggestion
csharp_style_var_when_type_is_apparent=true:suggestion
csharp_style_var_elsewhere=false:suggestion
dotnet_style_predefined_type_for_locals_parameters_members=true:suggestion
dotnet_style_predefined_type_for_member_access=true:suggestion

# Code style defaults
dotnet_sort_system_directives_first=true:suggestion
dotnet_separate_import_directive_groups=true:suggestion

csharp_using_directive_placement=outside_namespace:suggestion
csharp_prefer_braces=true:suggestion
csharp_preserve_single_line_blocks=true:none
csharp_preserve_single_line_statements=false:suggestion
csharp_prefer_static_local_function=true:suggestion
csharp_prefer_simple_using_statement=true:suggestion
csharp_style_prefer_switch_expression=true:suggestion

# Code quality
dotnet_style_readonly_field=true:suggestion
dotnet_code_quality_unused_parameters=all:suggestion

# Expression-level preferences
dotnet_style_object_initializer=true:suggestion
dotnet_style_collection_initializer=true:suggestion
dotnet_style_explicit_tuple_names=true:suggestion
dotnet_style_coalesce_expression=true:suggestion
dotnet_style_null_propagation=true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method=true:suggestion
dotnet_style_prefer_inferred_tuple_names=true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names=true:suggestion
dotnet_style_prefer_auto_properties=true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment=true:suggestion
dotnet_style_prefer_conditional_expression_over_return=true:suggestion
csharp_prefer_simple_default_expression=true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods=false:none
csharp_style_expression_bodied_constructors=false:none
csharp_style_expression_bodied_operators=true:refactoring
csharp_style_expression_bodied_properties=true:refactoring
csharp_style_expression_bodied_indexers=true:refactoring
csharp_style_expression_bodied_accessors=true:refactoring
csharp_style_expression_bodied_lambdas=true:refactoring
csharp_style_expression_bodied_local_functions=true:refactoring

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check=true:suggestion
csharp_style_pattern_matching_over_as_with_null_check=true:suggestion
csharp_style_inlined_variable_declaration=true:suggestion

# Null checking preferences
csharp_style_throw_expression=true:suggestion
csharp_style_conditional_delegate_call=true:suggestion

# Other features
csharp_style_prefer_index_operator=true:suggestion
csharp_style_prefer_range_operator=true:suggestion
csharp_style_pattern_local_over_anonymous_function=true:suggestion

# Space preferences
csharp_space_after_cast=true
csharp_space_after_colon_in_inheritance_clause=true
csharp_space_after_comma=true
csharp_space_after_dot=false
csharp_space_after_keywords_in_control_flow_statements=true
csharp_space_after_semicolon_in_for_statement=true
csharp_space_around_binary_operators=before_and_after
csharp_space_around_declaration_statements=false
csharp_space_before_comma=false
csharp_space_before_dot=false
csharp_space_before_open_square_brackets=false
csharp_space_before_semicolon_in_for_statement=false
csharp_space_between_empty_square_brackets=false
csharp_space_between_method_call_empty_parameter_list_parentheses=false
csharp_space_between_method_call_name_and_opening_parenthesis=false
csharp_space_between_method_call_parameter_list_parentheses=false
csharp_space_between_method_declaration_empty_parameter_list_parentheses=false
csharp_space_between_method_declaration_name_and_open_parenthesis=false
csharp_space_between_method_declaration_parameter_list_parentheses=false
csharp_space_between_parentheses=false
csharp_space_between_square_brackets=false

# define styles
dotnet_naming_style.camel_case_style.capitalization=camel_case
dotnet_naming_style.pascal_case_style.capitalization=pascal_case
dotnet_naming_style.interface_style.required_prefix=I
dotnet_naming_style.interface_style.capitalization=pascal_case
dotnet_naming_style.type_parameter_style.required_prefix=T
dotnet_naming_style.type_parameter_style.capitalization=pascal_case
dotnet_naming_style.private_field_style.required_prefix=_
dotnet_naming_style.private_field_style.capitalization=camel_case

# PascalCase (classes)
dotnet_naming_rule.classes_should_be_pascal_case.symbols=classes
dotnet_naming_rule.classes_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.classes_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.classes.applicable_kinds=class, struct

# PascalCase (structs)
dotnet_naming_rule.structs_should_be_pascal_case.symbols=structs
dotnet_naming_rule.structs_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.structs_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.structs.applicable_kinds=struct

# PascalCase prefixed by I (interface)
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_by_i.symbols=interfaces
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_by_i.severity=suggestion
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_by_i.style=interface_style
dotnet_naming_symbols.interfaces.applicable_kinds=interface

# PascalCase (constant fields)
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols=constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds=field
dotnet_naming_symbols.constant_fields.required_modifiers=const

# _camelCase (private fields)
dotnet_naming_rule.private_fields_should_be_camel_case.symbols=private_fields
dotnet_naming_rule.private_fields_should_be_camel_case.severity=suggestion
dotnet_naming_rule.private_fields_should_be_camel_case.style=private_field_style
dotnet_naming_symbols.private_fields.applicable_kinds=field
dotnet_naming_symbols.private_fields.applicable_accessibilities=private

# PascalCase (static readonly fields)
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.symbols=static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.static_readonly_fields.applicable_kinds=field
dotnet_naming_symbols.static_readonly_fields.required_modifiers=static, readonly

# PascalCase (non-private fields)
dotnet_naming_rule.non_private_fields_should_be_pascal_case.symbols=non_private_fields
dotnet_naming_rule.non_private_fields_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.non_private_fields_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.non_private_fields.applicable_kinds=field
dotnet_naming_symbols.non_private_fields.applicable_accessibilities=internal, protected, public

# PascalCase (properties)
dotnet_naming_rule.properties_should_be_pascal_case.symbols=properties
dotnet_naming_rule.properties_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.properties_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.properties.applicable_kinds=property

# PascalCase (methods)
dotnet_naming_rule.methods_should_be_pascal_case.symbols=methods
dotnet_naming_rule.methods_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.methods_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.methods.applicable_kinds=method

# PascalCase (local methods)
dotnet_naming_rule.local_methods_should_be_pascal_case.symbols=local_methods
dotnet_naming_rule.local_methods_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.local_methods_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.local_methods.applicable_kinds=local_function

# PascalCase (delegates)
dotnet_naming_rule.delegates_should_be_pascal_case.symbols=delegates
dotnet_naming_rule.delegates_should_be_pascal_case.severity=suggestion
dotnet_naming_rule.delegates_should_be_pascal_case.style=pascal_case_style
dotnet_naming_symbols.delegates.applicable_kinds=delegate

# PascalCase prefixed by On (events)
dotnet_naming_rule.events_should_be_pascal_case_prefixed_by_on.symbols=events
dotnet_naming_rule.events_should_be_pascal_case_prefixed_by_on.severity=suggestion
dotnet_naming_rule.events_should_be_pascal_case_prefixed_by_on.style=pascal_case_style
dotnet_naming_symbols.events.applicable_kinds=event

# camelCase (parameters)
dotnet_naming_rule.parameters_should_be_camel_case.symbols=parameters
dotnet_naming_rule.parameters_should_be_camel_case.severity=suggestion
dotnet_naming_rule.parameters_should_be_camel_case.style=camel_case_style
dotnet_naming_symbols.parameters.applicable_kinds=parameter

# PascalCase prefixed by T (type parameters)
dotnet_naming_rule.type_parameters_should_be_pascal_case_prefixed_by_t.symbols=type_parameters
dotnet_naming_rule.type_parameters_should_be_pascal_case_prefixed_by_t.severity=suggestion
dotnet_naming_rule.type_parameters_should_be_pascal_case_prefixed_by_t.style=type_parameter_style
dotnet_naming_symbols.type_parameters.applicable_kinds=type_parameter

# camelCase (locals)
dotnet_naming_rule.locals_should_be_camel_case.symbols=locals
dotnet_naming_rule.locals_should_be_camel_case.severity=suggestion
dotnet_naming_rule.locals_should_be_camel_case.style=camel_case_style
dotnet_naming_symbols.locals.applicable_kinds=local

# ReSharper properties
resharper_braces_redundant=true
resharper_csharp_wrap_multiple_declaration_style=wrap_if_long
resharper_keep_existing_embedded_arrangement=false
resharper_keep_existing_expr_member_arrangement=false
resharper_keep_existing_invocation_parens_arrangement=false
resharper_keep_existing_switch_expression_arrangement=false
resharper_max_enum_members_on_line=1
resharper_max_initializer_elements_on_line=1
resharper_nested_ternary_style=expanded
resharper_place_attribute_on_same_line=false
resharper_place_simple_accessor_on_single_line=false
resharper_place_simple_case_statement_on_same_line=if_owner_is_single_line
resharper_place_simple_embedded_statement_on_same_line=false
resharper_place_simple_initializer_on_single_line=false
resharper_wrap_after_invocation_lpar=false
resharper_wrap_before_first_type_parameter_constraint=false
resharper_wrap_before_invocation_rpar=false
resharper_wrap_for_stmt_header_style=wrap_if_long
resharper_wrap_ternary_expr_style=wrap_if_long
